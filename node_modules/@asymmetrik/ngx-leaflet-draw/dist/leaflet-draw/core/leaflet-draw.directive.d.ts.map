{"version":3,"file":"leaflet-draw.directive.d.ts","sources":["leaflet-draw.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, NgZone, OnInit } from '@angular/core';\nimport { Control, DrawEvents } from 'leaflet';\nimport 'leaflet-draw';\nimport { LeafletDirective, LeafletDirectiveWrapper } from '@asymmetrik/ngx-leaflet';\nexport declare class LeafletDrawDirective implements OnInit {\n    private zone;\n    leafletDirective: LeafletDirectiveWrapper;\n    drawControl: Control.Draw;\n    drawOptions: Control.DrawConstructorOptions;\n    drawLocal: any;\n    drawReady: EventEmitter<Control.Draw>;\n    onDrawCreated: EventEmitter<DrawEvents.Created>;\n    onDrawEdited: EventEmitter<DrawEvents.Edited>;\n    onDrawDeleted: EventEmitter<DrawEvents.Deleted>;\n    onDrawStart: EventEmitter<DrawEvents.DrawStart>;\n    onDrawStop: EventEmitter<DrawEvents.DrawStop>;\n    onDrawVertex: EventEmitter<DrawEvents.DrawVertex>;\n    onDrawEditStart: EventEmitter<DrawEvents.EditStart>;\n    onDrawEditMove: EventEmitter<DrawEvents.EditMove>;\n    onDrawEditResize: EventEmitter<DrawEvents.EditResize>;\n    onDrawEditVertex: EventEmitter<DrawEvents.EditVertex>;\n    onDrawEditStop: EventEmitter<DrawEvents.EditStop>;\n    onDrawDeleteStart: EventEmitter<DrawEvents.DeleteStart>;\n    onDrawDeleteStop: EventEmitter<DrawEvents.DeleteStop>;\n    onDrawToolbarOpened: EventEmitter<import(\"leaflet\").LeafletEvent>;\n    onDrawToolbarClosed: EventEmitter<import(\"leaflet\").LeafletEvent>;\n    onDrawMarkerContext: EventEmitter<import(\"leaflet\").LeafletEvent>;\n    constructor(leafletDirective: LeafletDirective, zone: NgZone);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    getDrawControl(): Control.Draw;\n}\n"]}