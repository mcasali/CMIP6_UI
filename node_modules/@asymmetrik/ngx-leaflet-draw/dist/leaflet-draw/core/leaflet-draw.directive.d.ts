import { EventEmitter, NgZone, OnInit } from '@angular/core';
import { Control, DrawEvents } from 'leaflet';
import 'leaflet-draw';
import { LeafletDirective, LeafletDirectiveWrapper } from '@asymmetrik/ngx-leaflet';
import * as ɵngcc0 from '@angular/core';
export declare class LeafletDrawDirective implements OnInit {
    private zone;
    leafletDirective: LeafletDirectiveWrapper;
    drawControl: Control.Draw;
    drawOptions: Control.DrawConstructorOptions;
    drawLocal: any;
    drawReady: EventEmitter<Control.Draw>;
    onDrawCreated: EventEmitter<DrawEvents.Created>;
    onDrawEdited: EventEmitter<DrawEvents.Edited>;
    onDrawDeleted: EventEmitter<DrawEvents.Deleted>;
    onDrawStart: EventEmitter<DrawEvents.DrawStart>;
    onDrawStop: EventEmitter<DrawEvents.DrawStop>;
    onDrawVertex: EventEmitter<DrawEvents.DrawVertex>;
    onDrawEditStart: EventEmitter<DrawEvents.EditStart>;
    onDrawEditMove: EventEmitter<DrawEvents.EditMove>;
    onDrawEditResize: EventEmitter<DrawEvents.EditResize>;
    onDrawEditVertex: EventEmitter<DrawEvents.EditVertex>;
    onDrawEditStop: EventEmitter<DrawEvents.EditStop>;
    onDrawDeleteStart: EventEmitter<DrawEvents.DeleteStart>;
    onDrawDeleteStop: EventEmitter<DrawEvents.DeleteStop>;
    onDrawToolbarOpened: EventEmitter<import("leaflet").LeafletEvent>;
    onDrawToolbarClosed: EventEmitter<import("leaflet").LeafletEvent>;
    onDrawMarkerContext: EventEmitter<import("leaflet").LeafletEvent>;
    constructor(leafletDirective: LeafletDirective, zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    getDrawControl(): Control.Draw;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LeafletDrawDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LeafletDrawDirective, "[leafletDraw]", never, { "drawOptions": "leafletDrawOptions"; "drawLocal": "leafletDrawLocal"; }, { "drawReady": "leafletDrawReady"; "onDrawCreated": "leafletDrawCreated"; "onDrawEdited": "leafletDrawEdited"; "onDrawDeleted": "leafletDrawDeleted"; "onDrawStart": "leafletDrawStart"; "onDrawStop": "leafletDrawStop"; "onDrawVertex": "leafletDrawVertex"; "onDrawEditStart": "leafletDrawEditStart"; "onDrawEditMove": "leafletDrawEditMove"; "onDrawEditResize": "leafletDrawEditResize"; "onDrawEditVertex": "leafletDrawEditVertex"; "onDrawEditStop": "leafletDrawEditStop"; "onDrawDeleteStart": "leafletDrawDeleteStart"; "onDrawDeleteStop": "leafletDrawDeleteStop"; "onDrawToolbarOpened": "leafletDrawToolbarOpened"; "onDrawToolbarClosed": "leafletDrawToolbarClosed"; "onDrawMarkerContext": "leafletDrawMarkerContext"; }, never>;
}

//# sourceMappingURL=leaflet-draw.directive.d.ts.map