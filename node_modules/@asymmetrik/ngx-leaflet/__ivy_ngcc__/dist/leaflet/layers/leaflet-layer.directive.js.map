{"version":3,"file":"leaflet-layer.directive.js","sources":["../../../src/leaflet/layers/leaflet-layer.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tDirective, EventEmitter, Input, NgZone, OnChanges, OnDestroy, OnInit, Output,\n\tSimpleChange\n} from '@angular/core';\n\nimport { Layer, LeafletEvent } from 'leaflet';\n\nimport { LeafletDirective } from '../core/leaflet.directive';\nimport { LeafletDirectiveWrapper } from '../core/leaflet.directive.wrapper';\nimport { LeafletUtil } from '../core/leaflet.util';\n\n\n/**\n * Layer directive\n *\n * This directive is used to directly control a single map layer. The purpose of this directive is to\n * be used as part of a child structural directive of the map element.\n *\n */\n@Directive({\n\tselector: '[leafletLayer]'\n})\nexport class LeafletLayerDirective\n\timplements OnChanges, OnDestroy, OnInit {\n\n\t@Input('leafletLayer') layer: Layer;\n\n\t// Layer Events\n\t@Output('leafletLayerAdd') onAdd = new EventEmitter<LeafletEvent>();\n\t@Output('leafletLayerRemove') onRemove = new EventEmitter<LeafletEvent>();\n\n\t// Layer Event handlers\n\tprivate onAddLayerHandler: any;\n\tprivate onRemoveLayerHandler: any;\n\n\t// Wrapper for the leaflet directive (manages the parent directive)\n\tprivate leafletDirective: LeafletDirectiveWrapper;\n\n\tconstructor(leafletDirective: LeafletDirective, private zone: NgZone) {\n\t\tthis.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n\t}\n\n\tngOnInit() {\n\n\t\t// Init the map\n\t\tthis.leafletDirective.init();\n\n\t}\n\n\tngOnDestroy() {\n\n\t\tif (null != this.layer) {\n\n\t\t\t// Unregister the event handlers\n\t\t\tthis.removeLayerEventListeners(this.layer);\n\n\t\t\t// Remove the layer from the map\n\t\t\tthis.layer.remove();\n\t\t}\n\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\n\t\tif (changes['layer']) {\n\n\t\t\t// Update the layer\n\t\t\tconst p: Layer = changes['layer'].previousValue;\n\t\t\tconst n = changes['layer'].currentValue;\n\n\t\t\tthis.zone.runOutsideAngular(() => {\n\t\t\t\tif (null != p) {\n\t\t\t\t\tthis.removeLayerEventListeners(p);\n\t\t\t\t\tp.remove();\n\t\t\t\t}\n\t\t\t\tif (null != n) {\n\t\t\t\t\tthis.addLayerEventListeners(n);\n\t\t\t\t\tthis.leafletDirective.getMap().addLayer(n);\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\tprivate addLayerEventListeners(l: Layer) {\n\n\t\tthis.onAddLayerHandler = (e: LeafletEvent) => LeafletUtil.handleEvent(this.zone, this.onAdd, e);\n\t\tl.on('add', this.onAddLayerHandler);\n\n\t\tthis.onRemoveLayerHandler = (e: LeafletEvent) => LeafletUtil.handleEvent(this.zone, this.onRemove, e);\n\t\tl.on('remove', this.onRemoveLayerHandler);\n\n\t}\n\n\tprivate removeLayerEventListeners(l: Layer) {\n\n\t\tl.off('add', this.onAddLayerHandler);\n\t\tl.off('remove', this.onRemoveLayerHandler);\n\n\t}\n\n}\n"]}